/**
 * Main buildfile for the KotlinLanguageServer
 * ===========================================
 *
 * This buildfile contains source code from https://github.com/JetBrains/kotlin-web-demo/blob/master/versions/1.2.50/build.gradle
 * licensed under http://www.apache.org/licenses/LICENSE-2.0
 */

buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
	}
}

plugins {
	id "org.jetbrains.kotlin.jvm" version "1.2.50"
	id "com.github.jk1.tcdeps" version "0.17"
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'maven'

group = 'org.javacs'
version = '0.1.1'

mainClassName = "org.javacs.kt.MainKt"
description = "kotlin-language-server"

sourceCompatibility = 1.8
targetCompatibility = 1.8

kotlin {
	experimental {
		coroutines 'enable'
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.gradle.org/gradle/libs-releases' }
	teamcityServer {
		url = 'http://teamcity.jetbrains.com'
		credentials {
			username = 'guest'
			password = 'guest'
		}
	}
}

configurations {
	kotlinJVM
	kotlinJS
}

dependencies {
	def kotlinRoot = "$kotlinBuildType:$kotlinBuild:kotlin-plugin-${kotlinPluginBuild}.zip!/Kotlin"

	implementation "com.google.guava:guava:21.0"
	implementation "org.gradle:gradle-tooling-api:4.3"
	implementation "org.eclipse.lsp4j:org.eclipse.lsp4j:0.4.1"
	implementation fileTree(dir: "lib", include: ["*.jar"])
	implementation fileTree(dir: "lib-kotlin", include: ["*.jar"])

	kotlinJVM tc("$kotlinRoot/kotlinc/lib/kotlin-compiler.jar")
	kotlinJVM tc("$kotlinRoot/kotlinc/lib/kotlin-script-runtime.jar")
	kotlinJVM tc("$kotlinRoot/kotlinc/lib/kotlin-runtime.jar")
	kotlinJVM tc("$kotlinRoot/kotlinc/lib/kotlin-stdlib-jdk8.jar")
	kotlinJVM tc("$kotlinRoot/lib/kotlin-plugin.jar")

	// TODO: Future support for Kotlin/JS that uses the following dependency
	// kotlinJS tc("$kotlinRoot/kotlinc/lib/kotlin-jslib.jar")

	testImplementation "org.openjdk.jmh:jmh-core:1.20"
	testImplementation "org.hamcrest:hamcrest-all:1.3"
	testImplementation "junit:junit:4.10"

	compileOnly "org.openjdk.jmh:jmh-generator-annprocess:1.20"
}

configurations.all { config ->
	config.resolutionStrategy {
		preferProjectModules()
	}
}

test {
	testLogging {
		events "failed"
		exceptionFormat "short"
	}
}

task copyKotlinLibs(type: Copy) {
	from configurations.kotlinJVM
	into projectDir.toString() + File.separator + "lib-kotlin"
}

compileKotlin.dependsOn copyKotlinLibs
build.finalizedBy(installDist)
