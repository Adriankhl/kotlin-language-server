allprojects { project ->
	task kotlinLSPDeps {
		task -> doLast {
			System.out.println ""
			System.out.println "gradle-version $gradleVersion"
			System.out.println "kotlin-lsp-project ${project.name}"

			if (project.hasProperty('android')) {
				project.android.getBootClasspath().each {
					System.out.println "kotlin-lsp-gradle $it"
				}
				if (project.android.hasProperty('applicationVariants')) {
					project.android.applicationVariants.all { variant ->
						variant.getCompileClasspath().each {
							System.out.println "kotlin-lsp-gradle $it"
						}
					}
				}

				def buildClasses = project.getBuildDir().absolutePath + File.separator + "intermediates" + File.separator + "classes" + File.separator + "debug"
				System.out.println "kotlin-lsp-gradle $buildClasses"
			} else {
				// Print the list of all dependencies jar files.
				project.configurations.findAll {
					it.metaClass.respondsTo(it, "isCanBeResolved") ? it.isCanBeResolved() : false
				}.each {
					it.resolve().each {
						if (it.inspect().endsWith("jar")) {
							System.out.println "kotlin-lsp-gradle $it"
						} else if (it.inspect().endsWith("aar")) {
							// If the dependency is an AAR file we try to determine the location
							// of the classes.jar file in the exploded aar folder.
							def splitted = it.inspect().split("/")
							def namespace = splitted[-5]
							def name = splitted[-4]
							def version = splitted[-3]
							def explodedPath = "$project.buildDir/intermediates/exploded-aar/$namespace/$name/$version/jars/classes.jar"
							System.out.println "kotlin-lsp-gradle $explodedPath"
						}
					}
				}
			}
		}
	}
}
