plugins {
    id 'com.github.node-gradle.node' version '1.5.2'
}

def resourcesDir = file("resources")

task copyIcon(type: Copy) {
    from "$rootDir/Icon128.png"
    into resourcesDir
}

/** Prepares the language server binaries for packaging. */
task copyLanguageServer(type: Copy) {
    dependsOn ':server:installDist'
    from project(':server').tasks.installDist.destinationDir
    into "$resourcesDir/install"
}

/** Prepares the grammars for packaging. */
task copyGrammars(type: Copy) {
    from "$rootDir/grammars/textmate"
    into "$resourcesDir/grammars/textmate"
}

/**
 * Prepares resources used by the extension.
 * Can be useful if the extension's code is
 * built separately, e.g. using 'npm run watch'.
 */
task preCompile { dependsOn copyIcon, copyLanguageServer, copyGrammars }

npm_run_compile { dependsOn preCompile }

/** Compiles the VSCode extension's TypeScript code. */
task compile { dependsOn npm_run_compile }

npm_run_test { dependsOn compile }

/** Tests the VSCode extension. */
task test { dependsOn npm_run_test }

npm_run_packageextension { dependsOn compile }

/** Packages the VSCode extension. */
task packageExtension { dependsOn npm_run_packageextension }

/** Packages and tests the VSCode extension. */
task build {
    // Does not include the test task (yet) since running extension
    // tests while another instance of VSCode is active is not yet supported
    dependsOn packageExtension /* , test */
}
