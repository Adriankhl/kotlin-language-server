name: 'Kotlin'
scopeName: 'source.kotlin'
type: 'tree-sitter'
parser: 'tree-sitter-kotlin'

fileTypes: ['kt', 'kts']

comments:
	start: '// '

scopes:
	'source_file': 'source.kotlin'
	'''
		"if",
		"else",
		"while",
		"do",
		"when",
		"try",
		"throw",
		"break",
		"continue",
		"return",
		"for"
	''': 'keyword.control.kotlin'
	'''
		"catch",
		"finally",
		"field"
	''': 'keyword.soft.kotlin'
	'''
		"as",
		"typeof",
		"is",
		"in"
	''': 'keyword.hard.kotlin'
	'''
		"abstract",
		"final",
		"enum",
		"open",
		"annotation",
		"sealed",
		"data",
		"override",
		"final",
		"lateinit",
		"private",
		"protected",
		"public",
		"internal",
		"inner",
		"companion",
		"noinline",
		"crossinline",
		"vararg",
		"reified",
		"tailrec",
		"operator",
		"infix",
		"inline",
		"external",
		"const",
		"suspend"
	''': 'storage.modifier.other.kotlin'
	'"fun"': 'storage.type.function.kotlin'
	'"object"': 'storage.type.object.kotlin'
	'"class"': 'storage.type.class.kotlin'
	'"typealias"': 'storage.type.alias.kotlin'
	'''
		"val",
		"var"
	''': 'storage.type.variable.kotlin'
	'''
		"++",
		"--",
		".",
		"?.",
		"?"
	''': 'keyword.operator.postfix.kotlin'
	'"!"': 'keyword.operator.prefix.kotlin'
	'":"': 'keyword.operator.typerhs.kotlin'
	'''
		"*",
		"/",
		"%"
	''': 'keyword.operator.multiplicative.kotlin'
	'''
		"+",
		"-"
	''': 'keyword.operator.additive.kotlin'
	'".."': 'keyword.operator.range.kotlin'
	'"?:"': 'keyword.operator.elvis.kotlin'
	'''
		"<",
		">",
		"<=",
		">="
	''': 'keyword.operator.comparison.kotlin'
	'''
		"==",
		"!=",
		"===",
		"!=="
	''': 'keyword.operator.equality.kotlin'
	'"&&"': 'keyword.operator.conjunction.kotlin'
	'"||"': 'keyword.operator.disjunction.kotlin'
	'''
		"=",
		"+=",
		"-=",
		"*=",
		"/=",
		"%="
	''': 'keyword.operator.assignment.kotlin'
